import requests

class MetaDefenderQuerier:
    def __init__(self, api_key):
        self.base_url = "https://api.metadefender.com/v4/"
        self.api_key = api_key

    def scan_file(self, file_path):
        """
        Upload and scan a file.
        """
        headers = {
            "apikey": self.api_key
        }
        
        with open(file_path, 'rb') as file:
            files = {'file': file}
            response = requests.post(self.base_url + "file", headers=headers, files=files)
            return response.json()

    def get_scan_result(self, data_id):
        """
        Retrieve the scan result for a specific file using the provided method from the website.
        """
        url = f"https://api.metadefender.com/v4/file/{data_id}"
        headers = {
            "apikey": self.api_key,
        }
        response = requests.get(url, headers=headers)
        return response.json()

    def get_scan_score(self, json_data):
        """
        Convert the provided JSON data from a malware scan to a score between 0 and 1.
        """
        progress_percentage = json_data.get('scan_results', {}).get('progress_percentage', 0)
        scan_result = json_data.get('scan_results', {}).get('scan_all_result_a', '')

        if scan_result == 'In Progress':
            return progress_percentage / 100
        elif scan_result == 'Clean':
            return 0
        elif scan_result == 'Infected':
            return 1
        else:
            return 0.5

# Usage
api_key = "Replace with your API key"  # Replace with your API key
querier = MetaDefenderQuerier(api_key)

# Prompt the user to input the file path
file_path = input("Please enter the path to your file: ")

# Upload the file and get the data_id
scan_response = querier.scan_file(file_path)

data_id = scan_response.get('data_id')

# Use the data_id to get the scan result using the provided method from the website
if data_id:
    result = querier.get_scan_result(data_id)
    score = querier.get_scan_score(result)
    print(score)  
else:
    print("Failed to get data_id from the scan response.")
